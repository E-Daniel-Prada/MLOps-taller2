version: '3'  # Especifica la versión de Docker Compose que se está utilizando.

services:
  jupyter:
    build: .
    volumes:
      - shared-models:/app/models
      - .:/app
    ports:
      - "8888:8888"
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root

  # Define los servicios que se ejecutarán en contenedores Docker.
  ml_service: # Nombre del servicio, en este caso es un servicio para ML (Machine Learning).
    build: .  # Indica que Docker debe construir la imagen usando el Dockerfile ubicado en el directorio actual (".").

    volumes:
      - shared-models:/app/models
      - .:/app
    
    ports:
      - "8000:8000"
      # Mapea el puerto 80 del contenedor al puerto 8000 del host.
      # Esto permite acceder a la aplicación en http://localhost:8000 mientras que internamente escucha en el puerto 80.

    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    # Define el comando que se ejecutará al iniciar el contenedor.
    # Aquí se usa `uvicorn` para iniciar una aplicación FastAPI (`main:app`).
    # --host 0.0.0.0: Permite que la aplicación sea accesible desde cualquier IP dentro de la red del contenedor.
    # --port 80: La aplicación se ejecutará en el puerto 80 dentro del contenedor.
    # --reload: Activa el modo de recarga automática, útil para entornos de desarrollo ya que reinicia el servidor si hay cambios en el código.
volumes:
  shared-models: